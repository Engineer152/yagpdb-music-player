{{$o:=8}}{{$botID:=204255221017214977}}
{{$h:= false}}{{range .Member.Roles}}{{if in (cslice 543140183403397130 818943711508693004 757760951620468817 723187777465876543) .}}{{$h =true}}{{end}}{{end}}{{$np:="‚ùå **You need to be a DJ to do this!**"}}
{{$q:=cslice}}{{with (dbGet 20 "queue").Value}}{{$q =$q.AppendSlice .}}{{end}}{{$nq:=cslice}}{{$nnq:=cslice}}{{- range $i,$e:=$q}}{{if $i}}{{$nq =$nq.Append $e}}{{end}}{{if gt $i 1}}{{$nnq =$nnq.Append $e}}{{end}}{{end}}
{{$e:=execAdmin "prefix"}}{{$p:=reReplace `[\.\[\]\-\?\!\\\*\{\}\(\)\|\+\$\^]` (slice $e (add 15 (len (str .Guild.ID))) (sub (len $e) 1)) `\$0`}}
{{$yagVC:=0}}{{$userVC:=0}}{{$usersVC:=cslice}}{{range .Guild.VoiceStates}}{{if eq .UserID $botID}}{{$yagVC =.ChannelID}}{{range $.Guild.VoiceStates}}{{if eq .ChannelID $yagVC}}{{$usersVC =$usersVC.Append .}}{{end}}{{end}}{{else if eq .UserID $.User.ID}}{{$userVC =.ChannelID}}{{end}}{{end}}

{{define "a"}}{{$s:=index . 0}}{{$t:="Nothing"}}{{if index . 1}}{{$t =(index . 1 0).title}}{{end}}{{dbDel 20 "skip"}}{{sendMessage nil (cembed "title" "üé∂ Now playing" "description" (printf "%s - %s\n\nLength: `%s`\n\nRequested By: <@%d>\n\nUp next: `%s`" $s.artist $s.title $s.length $s.req $t ) "color" (randInt 16777217))}}{{end}}
{{define "b"}}{{$t:=exec "sb" (print .artist " - " .title " [" .length "]")}}{{end}}
{{define "e"}}{{$t:=execAdmin "sbclose"}}{{dbDel 20 "skip"}}{{end}}
{{define "c"}}{{cancelScheduledUniqueCC . "music"}}{{end}}
{{define "s"}}{{scheduleUniqueCC (index . 0) nil (div (toDuration (index . 1)) 1000000000) "music" 1}}{{end}}
{{define "p"}}{{$p:=index . 0}}{{$c:=index . 1}}{{$r:=index . 2}}{{$q:=index . 3}}{{$nq:=index . 4}}{{$arg:=index . 6}}{{if $arg}}{{$song:=sdict}}{{$len:=0}}{{range index . 5}}{{- $found:=len (reFind (print `(?i)` ((split (reReplace `[[\]\\.?^${}()|*+]` $arg `\$0`) "`"|joinStr `\x60`))) .title) -}}{{- if and $found (or (eq $len 0) (lt $found $len)) -}}{{- $len =$found -}}{{- $song =sdict . -}}{{- end -}}{{end}}{{if $song}}{{$song.Set "req" $r}}{{if eq $c 0}}{{dbSet 20 "queue" ($q.Append $song)}}üìÉ **Queued `{{print $song.artist " - " $song.title}}`!**{{else if eq $c 1}}{{dbSet 20 "queue" ((cslice (index $q 0) $song).AppendSlice $nq)}}üìÉ **Next up `{{print $song.artist " - " $song.title}}`!**{{else}}{{template "c" .CCID}}{{template "e"}}{{sendMessage nil "‚è≠ **Skipped!**"}}{{sleep 1}}{{template "b" $song}}{{template "a" (cslice $song $nq)}}{{template "s" (cslice .CCID $song.length)}}{{dbSet 20 "queue" ((cslice $song).AppendSlice $nq)}}{{end}}{{else}}‚ùå **Couldn't find `{{$arg}}`!**{{end}}{{else}}‚ùå **Please specify a song!**{{end}}{{end}}
 
{{if .ExecData}}
	{{$emb:=sdict "title" "‚èπ Music stopped" "color" 16734296}}{{$r:=""}}{{if le (len $usersVC) 1}}{{$r ="üåê Disconnected"}}{{else if $nq}}{{with index $nq 0}}{{$sil:=execAdmin "sb" (print .artist " - " .title " [" .length "]")}}{{template "a" (cslice . $nnq)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{else}}{{$r ="üèÅ The queue has ended"}}{{end}}{{dbSet 20 "queue" $nq}}{{if $r}}{{$emb.Set "description" (print "Reason:\n" $r)}}{{sendMessage nil (cembed $emb)}}{{end}}
{{else}}
	{{$syntax:=cembed "title" "‚ùå Syntax:" "description" (print "Basic usage is: *" $p "music <action> [arguments]*\nMore advanced usage can be found [here](https://github.com/Engineer152/yagpdb-sb-music#the-command-actions-are-as-follows).\n\nYou can also do: " $p "music help <action>") "color" 16734296}}
	{{if gt (len .Args) 1}}
		{{$arg:=""}}{{range $i,$e:=.CmdArgs}}{{if $i}}{{$arg =print $arg " " $e}}{{end}}{{end}}{{if $arg}}{{$arg =slice $arg 1}}{{end}}{{$sb:=execAdmin "sb"}}{{$songs:=cslice}}
		{{range reFindAllSubmatches `\x60.+?\x60` (slice $sb 29 (sub (len $sb) 36))}}{{with reFindAllSubmatches `\A\x60(.+?)\s-\s(.+?)\s\[(.+?)\]\x60\z` (index . 0)}}{{$songs =$songs.Append (sdict "artist" (index . 0 1) "length" (index . 0 3) "title" (index . 0 2))}}{{end}}{{end}}
		{{$a:=lower (index .Args 1)}}
		{{if eq $a "help" "h"}}{{with $o}}{{$t:="all"}}{{if $arg}}{{$t =$arg}}{{end}}{{execCC . nil 0 (sdict "t" "h" "c" $t)}}{{else}}‚ùå **Options CCID is not set!**{{end}}
		{{else if eq $a "list" "l"}}{{execCC $o nil 0 (sdict "t" "a" "c" (cslice 0 $songs (or $arg 1)))}}
		{{else if eq $a "search" "find"}}{{if $arg}}{{execCC $o nil 0 (sdict "t" "f" "c" $arg)}}{{else}}‚ùå **Please specify a search query!**{{end}}
		{{else if eq $a "grab" "save" "yoink"}}{{with index $q 0}}{{sendDM (cembed "title" "üé∂ Current song" "description" (print .artist " - " .title "\n\nLength: `" .length "`"))}}{{end}}üì¨ **You've got mail!**
		{{else if eq $a "play" "p"}}{{template "p" (cslice $p 0 .User.ID $q $nq $songs $arg)}}
		{{else if eq $a "playall" "pa"}}{{if $h}}{{range $songs}}{{.Set "req" $.User.ID}}{{end}}{{dbSet 20 "queue" ($q.AppendSlice $songs)}}üìÉ **Queued all songs I could find!**{{else}}{{$np}}{{end}}
		{{else if eq $a "random" "r"}}{{with index $songs (randInt (sub (len $songs) 1))}}{{.Set "req" $.User.ID}}‚ú® **Random song is...** `{{print .artist " - " .title}}`{{dbSet 20 "queue" ($q.Append .)}}{{end}}
		{{else if eq $a "queue" "q"}}{{$t:=$q}}{{if $yagVC}}{{$t =$nq}}{{end}}{{execCC $o nil 0 (sdict "t" "a" "c" (cslice 1 $t (or $arg 1)))}}
		{{else if eq $a "remove" "rm"}}{{if $h}}{{if $arg}}{{$t:=$q}}{{$f:=cslice (index $q 0)}}{{if $yagVC}}{{$t =$nq}}{{end}}{{$nnq:=cslice}}{{$nr:=cslice}}{{$c:=0}}{{range split $arg " "}}{{with toInt .}}{{$nr =$nr.Append .}}{{end}}{{end}}{{range $i,$e:=$t}}{{if in $nr (add $i 1)}}{{$c =add $c 1}}{{else}}{{$nnq =$nnq.Append $e}}{{end}}{{end}}üóë **Removed {{$c}} songs!**{{if $yagVC}}{{dbSet 20 "queue" ($f.AppendSlice $nnq)}}{{else}}{{dbSet 20 "queue" $nnq}}{{end}}{{else}}‚ùå **Please input a number!**{{end}}{{else}}{{$np}}{{end}}
		{{else if eq $a "clear" "cl"}}{{if $h}}{{execCC $o nil 0 (sdict "t" "c" "c" (cslice $arg .Message.Mentions)}}{{$nc:="‚ùå **Nothing cleared!**"}}{{$f:=cslice (index $q 0)}}{{if $arg}}{{$u:=0}}{{with .Message.Mentions}}{{$u =(index . 0).ID}}{{end}}{{with or $u (toInt $arg)}}{{$u =.}}{{$t:=$q}}{{if $yagVC}}{{$t =$nq}}{{end}}{{$nnq:=cslice}}{{range $t}}{{if ne .req $u}}{{$nnq =$nnq.Append .}}{{end}}{{end}}{{if lt (len $nnq) (len $t)}}{{if not $yagVC}}{{$f =cslice}}{{end}}{{dbSet 20 "queue" ($f.AppendSlice $nnq)}}üóë **Queue cleared for <@{{$u}}>!**{{else}}{{$nc}}{{end}}{{end}}{{else}}{{$qc:="üóë **Queue cleared!**"}}{{if $yagVC}}{{if $nq}}{{dbSet 20 "queue" $f}}{{$qc}}{{else}}{{$nc}}{{end}}{{else}}{{dbDel 20 "queue"}}{{$qc}}{{end}}{{end}}{{else}}{{$np}}{{end}}
		{{else}}
			{{if not (reFind `^(n(?:owplaying|p)|(?:f(?:orce)?ski|p(?:layski|(?:lay)?to|ski))p|p(?:laynow|n)|s(?:huffle|t(?:art|op))|r(?:andom|eplay|emove)|begin|end|pt|ps|fs|e|rm?|b)$` $a)}}{{sendMessage nil $syntax}}
			{{else if not $userVC}}‚ùå **You're not in a voice channel!**
			{{else if eq $a "start" "begin" "b"}}{{if $yagVC}}‚ùå <@{{$botID}}> **is already playing something!**{{else if $q}}{{template "c" .CCID}}{{with index $q 0}}{{template "b" .}}{{sendMessage nil "üé∂ **Music started!**"}}{{template "a" (cslice . $nq)}}{{template "s" (cslice $.CCID .length)}}{{ end }}{{else}}ü§∑‚Äç‚ôÇÔ∏è **No songs in the queue**{{end}}
			{{else if not $yagVC}}‚ùå **Nothing is playing right now!**
			{{else if ne $yagVC $userVC}}‚ùå **You need to be in the same voice channel as <@{{$botID}}>!**
			{{else if eq $a "forceskip" "fs" "fskip"}}{{if $h}}{{$t:=1}}{{if $arg}}{{$t =toInt $arg}}{{end}}{{if $t}}{{sendMessage nil "‚è≠ **Skipped!**"}}{{template "c" .CCID}}{{template "e"}}{{$nnq:=cslice}}{{$nnnq:=cslice}}{{range $i,$e:=$q}}{{if ge $i $t}}{{$nnq =$nnq.Append $e}}{{if gt $i $t}}{{$nnnq =$nnnq.Append $e}}{{end}}{{end}}{{end}}{{if $nnq}}{{with index $nnq 0}}{{sleep 1}}{{template "b" .}}{{template "a" (cslice . $nnnq)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{dbSet 20 "queue" $nnq}}{{else}}{{execCC .CCID nil 0 1}}{{end}}{{else}}‚ùå **Please enter a valid number!**{{end}}{{else}}{{$np}}{{end}}
			{{else if eq $a "replay"}}{{template "c" .CCID}}{{template "e"}}{{with index $q 0}}{{.Set "req" $.User.ID}}{{dbSet 20 "queue" $q}}{{sleep 1}}{{template "b" .}}‚Ü™ **Replaying `{{print .artist " - " .title}}`!**{{template "s" (cslice $.CCID .length)}}{{end}}
			{{else if eq $a "playtop" "pt" "ptop"}}{{template "p" (cslice $p 1 .User.ID $q $nq $songs $arg)}}
			{{else if eq $a "playskip" "ps" "pskip" "playnow" "pn"}}{{template "p" (cslice $p 2 .User.ID $q $nq $songs $arg)}}
			{{else if eq $a "stop" "end" "e"}}{{template "c" .CCID}}{{template "e"}}‚èπ **Music stopped!**{{dbSet 20 "queue" $nq}}
			{{else if eq $a "nowplaying" "np"}}{{template "a" (cslice (index $q 0) $nq)}}
			{{else if eq $a "shuffle"}}{{if $h}}{{if $nq}}{{dbSet 20 "queue" (shuffle $nq)}}üîÄ **Shuffled the queue!**{{else}}‚ùå **Nothing to shuffle!**{{end}}{{else}}{{$np}}{{end}}
			{{end}}
		{{end}}
	{{else}}{{sendMessage nil $syntax}}{{end}}
{{end}}
