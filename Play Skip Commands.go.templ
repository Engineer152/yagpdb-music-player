{{/*
	This command manipulates the soundboard to act like a music player.
	
	Recommended trigger: Regex trigger with trigger `\A(-|<@!?756182871580082309>\s*)(play|skip)(\s+|\z)`.
*/}}

{{ $current := "None" }} 
{{ $timeA := 0 }}
{{ $upnext := "None" }}	
{{ $timeB := 0 }}
{{ $queue := cslice}}
{{ $global := 1 }}
{{ $cc := "soundboard trigger CC #" }}

{{ $channels := cslice
	757620825691258880
	}}

{{/* "Songname" Length of Song in secconds */}}
{{ $songs := dbSet $global "songs" sdict
    "Born to Live" "2m56s"
    "OT Intro" "0m30s"
    "Legends Are Made" "2m51s"
    "Mona Lisa" "3m12s"
    "Good as Gold" "2m45s"
    "Epic" "4m0s"
    "Good News Song" "1m0s"
    "Bring that Fire" "3m5s"
    "Fire on Up" "3m44s"
    "Hands Up" 3m23s"
    "Ready or Not" "2m42s"
    "Star" "2m37s" 
    "The Best" "3m48s"
    "VIP" "4m0s"
    "Watch Me" "2m51s"
    "What a Day" "3m47s"
    "Back At It" "3m0s"
    "Money Run Low" "3m1s"
    "Power" "3m51s"
    "Move" "4m0s"
    "Keep it 100" "3m1s"
    "Legend" "3m9s"
    "Closer Further" "3m29s"
    "Nothing But Vibe" "3m33s"
    "Get On Up" "3m25s"
    "Its Like Woah" "3m27s"
    "Unstopable" "3m11s"
	) }}

{{/* Set up the -play command */}}
{{ if eq .Cmd "-play" }}
{{ $args := parseArgs 0 "**Syntax:** -play songname" (carg "string" "songname" ) }}
{{ if dbGet 0 "queue" }}
{{ $queue = $queue.AppendSlice .Value}}{{end}}
{{ $queue.Append $upnext }}
{{ dbSet 0 "queue" $queue}}
{{ if and ($args.IsSet 0) (ne $current "None") }}
{{ $upnext = $args.Get 0 }}
{{ $timeB = dbSetExpire $global $upnext "songlength" ($songs.Get $upnext) }}
{{else}} 
{{ $current = $args.Get 0 }}
{{if $songs.Get $current}}
{{ $timeA = dbSetExpire $global $current "songlength" ($songs.Get $current) }}
{{end}}
{{end}}

{{ if dbGet $global "songboard" }}
{{ with dbGet $global "queue" }}
{{ $queue = $queue.AppendSlice .Value}}{{end}}
{{ $queue.Append $upnext }}
{{ dbSet 0 "queue" $queue}}
{{ $initial := dbGet $global "songboard" }}
{{ execCC $cc nil 2 (sdict
	"Current" (sdict "Name" $current "Length" $timeA )
	"Upnext" (sdict "Name" $upnext "Length" $timeB )
	"MsgID" $initial
	"Songs" $songs
	"Queue" $queue
) }}
{{ dbSet $global "upnext" $upnext }} 
{{end}}{{end}}

{{/* Setting up the -skip command */}}
{{ if eq .Cmd "-skip" }}
{{ $current = $upnext }}
{{ with dbGet $global "queue" }}
{{ $queue = dbGet $global "queue" }}
{{ $upnext = $queue.Index 1 }}
{{end}}
{{ exec "sbreset" }}
{{ execCC $cc nil 2 (sdict
	"Current" (sdict "Name" $current "Length" $timeA )
	"Upnext" (sdict "Name" $upnext "Length" $timeB )
	"MsgID" $initial
	"Songs" $songs
	"Queue" $queue
) }}
{{end}}

{{else}}
{{/* Initial Embed */}}
{{ $embed := sdict 
	"title" "DPGN Soundboard"
	"description" "The current queue for the soundboard."
	"color" 14232643
	"fields" (cslice
		(sdict "name" $current "value" $timeA "inline" true)
		(sdict "name" $upnext "value" $timeB "inline" true)
	)
}}

{{ $initial := sendMessageRetID nil (cembed $embed) }}
{{ dbSet $global "songboard" $initial }}
{{ sleep 3 }}
{{ execCC $cc (index $channels (randInt (len $channels))) 2 (sdict
	"Current" (sdict "Name" $current "Length" $timeA )
	"Upnext" (sdict "Name" $upnext "Length" $timeB )
	"Embed" $embed
	"MsgID" $initial
	"ChannelID" .Channel.ID
	"Songs" $songs
) }}
{{end}}
