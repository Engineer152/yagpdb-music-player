{{/* Current commands */}}
{{ $commands := cslice
		(cslice "play" (cslice "p") "Plays a song with the given name" "<query>")
		(cslice "skip" (cslice "next" "s") "Votes to skip the current playing song" "[number]")
		(cslice "replay" (cslice "again") "Resets the progress of the current song")
		(cslice "random" (cslice "r") "Plays a random song from the soundboard")
		(cslice "playall" (cslice "pa") "Plays all songs from the soundboard")
		(cslice "playtop" (cslice "pt" "ptop") "Adds a song with the given name **on the top of the queue**" "<query>")
		(cslice "playskip" (cslice "ps" "pskip" "playnow" "pn") "Skips the current song and plays the song you requested" "<query>")
		(cslice "start" (cslice "begin" "b") "Starts the music playback")
		(cslice "stop" (cslice "end" "e") "Stops the music playback")

		(cslice "help" (cslice "h") "Shows you info like this in a nice overview. Even with usage if the action has any.\n`<>` means something is required, `[]` means it's optional." "[action]")
		(cslice "list" (cslice "l") "Lists all available music from the soundboard" "[page]")
		(cslice "search" (cslice "find") "Searches from the Soundboard for a song via your query and returns the top 10 results" "<query>")
		(cslice "nowplaying" (cslice "np") "Shows what song the bot is currently playing")
		(cslice "grab" (cslice "save" "yoink") "Saves the current playing song to your Direct Messages")

		(cslice "queue" (cslice "q") "Shows the queue" "[page]")
		(cslice "shuffle" (cslice) "Shuffles the entire queue")
		(cslice "clear" (cslice "cl") "Clears the whole queue") }}

{{/* For the final version */}}
{{ $commands2 := sdict
	"Song" (cslice
		(cslice "play" (cslice "p") "Plays a song with the given name" "<query>")
		(cslice "playtop" (cslice "pt" "ptop") "Adds a song with the given name **on the top of the queue**" "<query>")
		(cslice "playskip" (cslice "ps" "pskip" "playnow" "pn") "Skips the current song and plays the song you requested" "<query>")
		(cslice "search" (cslice "find") "Searches from the Soundboard for a song via your query and returns the top 10 results" "<query>")
		(cslice "nowplaying" (cslice "np") "Shows what song Rythm is currently playing")
		(cslice "grab" (cslice "save" "yoink") "Saves the current playing song to your Direct Messages")
		(cslice "replay" (cslice) "Resets the progress of the current song")
		(cslice "loop" (cslice "repeat") "Toggles looping for the current playing song")
		(cslice "skip" (cslice "voteskip" "next" "s") "Votes to skip the current playing song" "[number]")
		(cslice "forceskip" (cslice "fs" "fskip") "Skips the current playing song immediately" "[number]")
		(cslice "pause" (cslice "stop") "Pauses the current playing track")
		(cslice "resume" (cslice "re" "res" "continue") "Resumes paused music")
		(cslice "disconnect" (cslice "dc" "leave" "dis" "fuckoff") "Disconnects the bot from the voice channel it is in"))
	"Queue" (cslice
		(cslice "queue" (cslice "q") "Shows the first page of the queue" "[page]")
		(cslice "loopqueue" (cslice "qloop" "lq" "queueloop") "Toggles looping for the whole queue")
		(cslice "move" (cslice "m" "mv") "Moves a certain song to a chosen (or first) position in the queue" "<old positon> [new position]")
		(cslice "skipto" (cslice "st") "Skips to a certain position in the queue" "<position>")
		(cslice "shuffle" (cslice "random") "Shuffles the entire queue")
		(cslice "remove" (cslice "rm") "Removes a certain entry from the queue" "<number(s)>")
		(cslice "clear" (cslice "cl") "Clears the whole queue" "[@user]")
		(cslice "leavecleanup" (cslice "lc") "Removes absent user's songs from the queue")
		(cslice "removedupes" (cslice "rmd" "rd" "drm") "Removes duplicate songs from the queue")) }}

{{ $emb := sdict }}
{{ $e := execAdmin "prefix" }}{{ $prefix := reReplace `[\.\[\]\-\?\!\\\*\{\}\(\)\|\+\$\^]` (slice $e (add 15 (len (str $.Guild.ID))) (sub (len $e) 1)) `\$0` }}
{{ if eq .ExecData "all" }}
	{{ $songCat := "" }}{{ $queueCat := "" }}{{ $infoCat := "" }}
	{{ range $i, $e := $commands }}
		{{ if le $i 8 }}
			{{ $songCat = print $songCat "\n" (index $e 0) }}
		{{ else if le $i 13 }}
			{{ $queueCat = print $queueCat "\n" (index $e 0) }}
		{{ else }}
			{{ $infoCat = print $infoCat "\n" (index $e 0) }}
		{{ end }}
	{{ end }}
	{{ $emb = sdict "title" "üéº Music commands" "color" (randInt 16777217) "description" (print "**These commands must be proceded with** _" $prefix "music_") "fields" (cslice (sdict "name" "Song:" "value" $songCat "inline" true) (sdict "name" "Queue:" "value" $queueCat "inline" true) (sdict "name" "Info:" "value" $infoCat "inline" true)) }}
{{ else }}
	{{ range $i, $e := $commands }}
		{{ if in ((cslice (index $e 0)).AppendSlice (index $e 1)) $.ExecData }}
			{{ $cat := "Info" }}
			{{ if le $i 8 }}
				{{ $cat = "Song" }}
			{{ else if le $i 13 }}
				{{ $cat = "Queue" }}
			{{ end }}
			{{ $emb.Set "fields" (cslice (sdict "name" "Category:" "value" $cat "inline" true)) }}
			{{ $emb.Set "title" (title (index $e 0)) }}
			{{ $als := "" }}
			{{ range (index $e 1) }}
				{{ $als = print $als ", " . }}
			{{ else }}
				{{ $als = ", None" }}
			{{ end }}
			{{ $emb.Set "fields" ($emb.fields.Append (sdict "name" "Aliases:" "value" (slice $als 2) "inline" true)) }}
			{{ $emb.Set "description" (index $e 2) }}
			{{ if gt (len $e) 3 }}
				{{ $emb.Set "fields" ($emb.fields.Append (sdict "name" "Usage:" "value" (print $prefix "music " (index $e 0) " " (index $e 3)))) }}
			{{ end }}
		{{ end }}
	{{ end }}
{{ end }}
{{ if $emb.title }}{{ sendMessage nil (cembed $emb) }}{{ else }}‚ùå **Couldn't find command `{{ .ExecData }}`!**{{ end }}