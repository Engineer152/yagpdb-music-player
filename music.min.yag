{{$N:=8}}{{$l:=204255221017214977}}{{$O:=false}}{{range .Member.Roles}}{{if in (cslice 818943711508693004 757760951620468817 723187777465876543) .}}{{$O =true}}{{end}}{{end}}{{$H:="‚ùå **You need to be a DJ to do this!**"}}{{$P:=cslice}}{{with (dbGet 20 "queue").Value}}{{$P =$P.AppendSlice .}}{{end}}{{$I:=cslice}}{{$B:=cslice}}{{range $Q,$R:=$P}}{{if $Q}}{{$I =$I.Append $R}}{{end}}{{if gt $Q 1}}{{$B =$B.Append $R}}{{end}}{{end}}{{$R:=execAdmin "prefix"}}{{$S:=reReplace `[\.\[\]\-\?\!\\\*\{\}\(\)\|\+\$\^]` (slice $R (add 15 (len (str .Guild.ID))) (sub (len $R) 1)) `\$0`}}{{$m:=0}}{{$j:=0}}{{$g:=cslice}}{{range .Guild.VoiceStates}}{{if eq .UserID $l}}{{$m =.ChannelID}}{{range $.Guild.VoiceStates}}{{if eq .ChannelID $m}}{{$g =$g.Append .}}{{end}}{{end}}{{else if eq .UserID $.User.ID}}{{$j =.ChannelID}}{{end}}{{end}}{{define "a"}}{{$S:=index . 0}}{{$T:=index . 1}}{{$U:=index . 2}}{{if eq $T 0}}{{$V:="Nothing"}}{{if index . 3}}{{$V =(index . 3 0).title}}{{end}}{{dbDel 20 "skip"}}{{sendMessage nil (cembed "title" "üé∂ Now playing" "description" (printf "%s - %s\n\nLength: `%s`\n\nRequested By: <@%d>\n\nUp next: `%s`" $U.artist $U.title $U.length $U.req $V ) "color" (randInt 16777217))}}{{else}}{{$W:=""}}{{$v:=toInt (roundCeil (div (toFloat (len $U)) 10))}}{{$z:=toInt (index . 3)}}{{if not (or $U $v)}}‚ùå **Queue is empty!**{{else if and (gt $z 0) (le $z $v)}}{{$X:=sub (mult $z 10) 10}}{{$Y:=$X}}{{range $Q,$R:=$U}}{{if and (ge $Q $Y) (lt $Q (add $Y 10))}}{{$X =add $X 1}}{{$C:=""}}{{with $R.req}}{{$C =print "<@" $R.req ">"}}{{end}}{{$W =printf "%s\n\n`%d.` [%s - %s](https://music.youtube.com/search?q=%s+%s) **[%s]** %s" $W $X $R.artist $R.title (urlquery (lower $R.title)) (urlquery (lower $R.artist)) $R.length $C}}{{end}}{{end}}{{$w:="üìÉ Queue"}}{{if ne $T 1}}{{$w ="üéµ Available songs"}}{{end}}{{sendMessage nil (cembed "title" $w "description" $W "color" 3324667 "thumbnail" (sdict "url" "https://raw.githubusercontent.com/iamcal/emoji-data/master/img-google-136/1f3b5.png") "footer" (sdict "text" (print "Page " $z "/" $v)))}}{{else}}‚ùå **That page doesn't exist!**{{end}}{{end}}{{end}}{{define "b"}}{{$V:=exec "sb" (print .artist " - " .title " [" .length "]")}}{{end}}{{define "e"}}{{$V:=execAdmin "sbclose"}}{{dbDel 20 "skip"}}{{end}}{{define "c"}}{{cancelScheduledUniqueCC . "music"}}{{end}}{{define "s"}}{{scheduleUniqueCC (index . 0) nil (div (toDuration (index . 1)) 1000000000) "music" 1}}{{end}}{{define "p"}}{{$S:=index . 0}}{{$T:=index . 1}}{{$Z:=index . 2}}{{$P:=index . 3}}{{$I:=index . 4}}{{$D:=index . 6}}{{if $D}}{{$A:=sdict}}{{$E:=0}}{{range index . 5}}{{$x:=len (reFind (print `(?i)` ((split (reReplace `[[\]\\.?^${}()|*+]` $D `\$0`) "`"|joinStr `\x60`))) .title)}}{{if and $x (or (eq $E 0) (lt $x $E))}}{{$E =$x}}{{$A =sdict .}}{{end}}{{end}}{{if $A}}{{$A.Set "req" $Z}}{{if eq $T 0}}{{dbSet 20 "queue" ($P.Append $A)}}üìÉ **Queued `{{print $A.artist " - " $A.title}}`!**{{else if eq $T 1}}{{dbSet 20 "queue" ((cslice (index $P 0) $A).AppendSlice $I)}}üìÉ **Next up `{{print $A.artist " - " $A.title}}`!**{{else}}{{template "c" .CCID}}{{template "e"}}{{sendMessage nil "‚è≠ **Skipped!**"}}{{sleep 1}}{{template "b" $A}}{{template "a" (cslice $S 0 $A $I)}}{{template "s" (cslice .CCID $A.length)}}{{dbSet 20 "queue" ((cslice $A).AppendSlice $I)}}{{end}}{{else}}‚ùå **Couldn't find `{{$D}}`!**{{end}}{{else}}‚ùå **Please specify a song!**{{end}}{{end}}{{if .ExecData}}{{$F:=sdict "title" "‚èπ Music stopped" "color" 16734296}}{{$Z:=""}}{{if le (len $g) 1}}{{$Z ="üåê Disconnected"}}{{else if $I}}{{with index $I 0}}{{$G:=execAdmin "sb" (print .artist " - " .title " [" .length "]")}}{{template "a" (cslice $S 0 . $B)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{else}}{{$Z ="üèÅ The queue has ended"}}{{end}}{{dbSet 20 "queue" $I}}{{if $Z}}{{$F.Set "description" (print "Reason:\n" $Z)}}{{sendMessage nil (cembed $F)}}{{end}}{{else}}{{$k:=cembed "title" "‚ùå Syntax:" "description" (print "Basic usage is: *" $S "music <action> [arguments]*\nMore advanced usage can be found [here](https://github.com/Engineer152/yagpdb-sb-music#the-command-actions-are-as-follows).\n\nYou can also do: " $S "music help <action>") "color" 16734296}}{{if gt (len .Args) 1}}{{$D:=""}}{{range $Q,$R:=.CmdArgs}}{{if $Q}}{{$D =print $D " " $R}}{{end}}{{end}}{{if $D}}{{$D =slice $D 1}}{{end}}{{$J:=execAdmin "sb"}}{{$y:=cslice}}{{range reFindAllSubmatches `\x60.+?\x60` (slice $J 29 (sub (len $J) 36))}}{{with reFindAllSubmatches `\A\x60(.+?)\s-\s(.+?)\s\[(.+?)\]\x60\z` (index . 0)}}{{$y =$y.Append (sdict "artist" (index . 0 1) "length" (index . 0 3) "title" (index . 0 2))}}{{end}}{{end}}{{$0:=lower (index .Args 1)}}{{if eq $0 "help" "h"}}{{with $N}}{{$V:="all"}}{{if $D}}{{$V =$D}}{{end}}{{execCC . nil 0 $V}}{{else}}‚ùå **Options CCID is not set!**{{end}}{{else if eq $0 "list" "l"}}{{template "a" (cslice $S 2 $y (or $D 1))}}{{else if eq $0 "search" "find"}}{{if $D}}{{$x:=cslice}}{{range $Q,$R:=$y}}{{if reFind (print `(?i)` ((split (reReplace `[[\]\\.?^${}()|*+]` $D `\$0`) "`"|joinStr `\x60`))) $R.title}}{{$x =$x.Append (sdict "artist" $R.artist "length" $R.length "title" $R.title "number" $Q)}}{{end}}{{end}}{{with $x}}{{$F:=sdict "title" "üéµ Songs found"}}{{$W:=""}}{{range $Q,$R:=.}}{{if lt $Q 10}}{{$W =printf "%s\n\n`%d.` [%s - %s](https://music.youtube.com/search?q=%s+%s) **[%s]**" $W (add $R.number 1) $R.artist $R.title (urlquery (lower $R.title)) (urlquery (lower $R.artist)) $R.length}}{{end}}{{end}}{{if ge (len $x) 10}}{{$W =print $W "\n\n\n**Only showing the first 10 results**"}}{{end}}{{$F.Set "description" $W}}{{sendMessage nil (cembed $F)}}{{else}}‚ùå **No songs found with `{{$D}}`!**{{end}}{{else}}‚ùå **Please specify a search query!**{{end}}{{else if eq $0 "grab" "save" "yoink"}}{{with index $P 0}}{{sendDM (cembed "title" "üé∂ Current song" "description" (print .artist " - " .title "\n\nLength: `" .length "`"))}}{{end}}üì¨ <{{.User.ID}}>**, you've got mail!**{{else if eq $0 "play" "p"}}{{template "p" (cslice $S 0 .User.ID $P $I $y $D)}}{{else if eq $0 "playall" "pa"}}{{if $O}}{{range $y}}{{.Set "req" $.User.ID}}{{end}}{{dbSet 20 "queue" ($P.AppendSlice $y)}}üìÉ **Queued all songs I could find!**{{else}}{{$H}}{{end}}{{else if eq $0 "random" "r"}}{{with index $y (randInt (sub (len $y) 1))}}{{.Set "req" $.User.ID}}‚ú® **Random song is...** `{{print .artist " - " .title}}`{{dbSet 20 "queue" ($P.Append .)}}{{end}}{{else if eq $0 "queue" "q"}}{{if $m}}{{template "a" (cslice $S 1 $I (or $D 1))}}{{else}}{{template "a" (cslice $S 1 $P (or $D 1))}}{{end}}{{else if eq $0 "clear" "cl"}}{{if $O}}{{$K:="‚ùå **Nothing cleared!**"}}{{$1:=cslice (index $P 0)}}{{if $D}}{{$2:=0}}{{with .Message.Mentions}}{{$2 =(index . 0).ID}}{{end}}{{with or $2 (toInt $D)}}{{$2 =.}}{{$V:=$P}}{{if $m}}{{$V =$I}}{{end}}{{$B:=cslice}}{{range $V}}{{if ne .req $2}}{{$B =$B.Append .}}{{end}}{{end}}{{if lt (len $B) (len $V)}}{{if not $m}}{{$1 =cslice}}{{end}}{{dbSet 20 "queue" ($1.AppendSlice $B)}}üóë **Queue cleared for <@{{$2}}>!**{{else}}{{$K}}{{end}}{{end}}{{else}}{{$L:="üóë **Queue cleared!**"}}{{if $m}}{{if $I}}{{dbSet 20 "queue" $1}}{{$L}}{{else}}{{$K}}{{end}}{{else}}{{dbDel 20 "queue"}}{{$L}}{{end}}{{end}}{{else}}{{$H}}{{end}}{{else}}{{if not (reFind `^(n(?:owplaying|p)|(?:f(?:orce)?ski|p(?:layski|(?:lay)?to|ski))p|p(?:laynow|n)|s(?:huffle|t(?:art|op))|r(?:andom|eplay|emove)|begin|end|pt|ps|fs|e|rm?|b)$` $0)}}{{sendMessage nil $k}}{{else if not $j}}‚ùå **You're not in a voice channel!**{{else if eq $0 "start" "begin" "b"}}{{if $m}}‚ùå <@{{$l}}> **is already playing something!**{{else if $P}}{{template "c" .CCID}}{{with index $P 0}}{{template "b" .}}{{sendMessage nil "üé∂ **Music started!**"}}{{template "a" (cslice $S 0 . $B)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{else}}ü§∑‚Äç‚ôÇÔ∏è **No songs in the queue**{{end}}{{else if not $m}}‚ùå **Nothing is playing right now!**{{else if ne $m $j}}‚ùå **You need to be in the same voice channel as <@{{$l}}>!**{{else if eq $0 "forceskip" "fs" "fskip"}}{{sendMessage nil "‚è≠ **Skipped!**"}}{{template "c" .CCID}}{{template "e"}}{{if $I}}{{with index $I 0}}{{sleep 1}}{{template "b" .}}{{template "a" (cslice $S 0 . $B)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{dbSet 20 "queue" $I}}{{else}}{{execCC .CCID nil 0 1}}{{end}}{{else if eq $0 "replay"}}{{template "c" .CCID}}{{template "e"}}{{with index $P 0}}{{.Set "req" $.User.ID}}{{dbSet 20 "queue" $P}}{{sleep 1}}{{template "b" .}}‚Ü™ **Replaying `{{print .artist " - " .title}}`!**{{template "s" (cslice $.CCID .length)}}{{end}}{{else if eq $0 "playtop" "pt" "ptop"}}{{template "p" (cslice $S 1 .User.ID $P $I $y $D)}}{{else if eq $0 "playskip" "ps" "pskip" "playnow" "pn"}}{{template "p" (cslice $S 2 .User.ID $P $I $y $D)}}{{else if eq $0 "stop" "end" "e"}}{{template "c" .CCID}}{{template "e"}}‚èπ **Music stopped!**{{dbSet 20 "queue" $I}}{{else if eq $0 "nowplaying" "np"}}{{template "a" (cslice $S 0 (index $P 0) $I)}}{{else if eq $0 "remove" "rm"}}{{if $O}}{{if $D}}{{$V:=$P}}{{$1:=cslice (index $P 0)}}{{if $m}}{{$V =$I}}{{end}}{{$B:=cslice}}{{$M:=cslice}}{{$T:=0}}{{range split $D " "}}{{with toInt .}}{{$M =$M.Append .}}{{end}}{{end}}{{range $Q,$R:=$V}}{{if in $M (add $Q 1)}}{{$T =add $T 1}}{{else}}{{$B =$B.Append $R}}{{end}}{{end}}üóë **Removed {{$T}} songs!**{{if $m}}{{dbSet 20 "queue" ($1.AppendSlice $B)}}{{else}}{{dbSet 20 "queue" $B}}{{end}}{{else}}‚ùå **Please input a number!**{{end}}{{else}}{{$H}}{{end}}{{else if eq $0 "shuffle"}}{{if $O}}{{if $I}}{{dbSet 20 "queue" (shuffle $I)}}üîÄ **Shuffled the queue!**{{else}}‚ùå **Nothing to shuffle!**{{end}}{{else}}{{$H}}{{end}}{{end}}{{end}}{{else}}{{sendMessage nil $k}}{{end}}{{end}}