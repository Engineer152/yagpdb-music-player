{{$H:=8}}{{$j:=204255221017214977}}{{$I:=false}}{{range .Member.Roles}}{{if in (cslice 543140183403397130 818943711508693004 757760951620468817 723187777465876543) .}}{{$I =true}}{{end}}{{end}}{{$B:="‚ùå **You need to be a DJ to do this!**"}}{{$J:=cslice}}{{with (dbGet 20 "queue").Value}}{{$J =$J.AppendSlice .}}{{end}}{{$C:=cslice}}{{$w:=cslice}}{{range $K,$L:=$J}}{{if $K}}{{$C =$C.Append $L}}{{end}}{{if gt $K 1}}{{$w =$w.Append $L}}{{end}}{{end}}{{$L:=execAdmin "prefix"}}{{$M:=reReplace `[\.\[\]\-\?\!\\\*\{\}\(\)\|\+\$\^]` (slice $L (add 15 (len (str .Guild.ID))) (sub (len $L) 1)) `\$0`}}{{$k:=0}}{{$d:=0}}{{$b:=cslice}}{{range .Guild.VoiceStates}}{{if eq .UserID $j}}{{$k =.ChannelID}}{{range $.Guild.VoiceStates}}{{if eq .ChannelID $k}}{{$b =$b.Append .}}{{end}}{{end}}{{else if eq .UserID $.User.ID}}{{$d =.ChannelID}}{{end}}{{end}}{{define "a"}}{{$M:=index . 0}}{{$N:=index . 1}}{{$O:="Nothing"}}{{if index . 2}}{{$O =(index . 2 0).title}}{{end}}{{dbDel 20 "skip"}}{{sendMessage nil (cembed "title" "üé∂ Now playing" "description" (printf "%s - %s\n\nLength: `%s`\n\nRequested By: <@%d>\n\nUp next: `%s`" $N.artist $N.title $N.length $N.req $O ) "color" (randInt 16777217))}}{{end}}{{define "b"}}{{$O:=exec "sb" (print .artist " - " .title " [" .length "]")}}{{end}}{{define "e"}}{{$O:=execAdmin "sbclose"}}{{dbDel 20 "skip"}}{{end}}{{define "c"}}{{cancelScheduledUniqueCC . "music"}}{{end}}{{define "s"}}{{scheduleUniqueCC (index . 0) nil (div (toDuration (index . 1)) 1000000000) "music" 1}}{{end}}{{define "p"}}{{$M:=index . 0}}{{$P:=index . 1}}{{$Q:=index . 2}}{{$J:=index . 3}}{{$C:=index . 4}}{{$x:=index . 6}}{{if $x}}{{$n:=sdict}}{{$y:=0}}{{range index . 5}}{{$l:=len (reFind (print `(?i)` ((split (reReplace `[[\]\\.?^${}()|*+]` $x `\$0`) "`"|joinStr `\x60`))) .title)}}{{if and $l (or (eq $y 0) (lt $l $y))}}{{$y =$l}}{{$n =sdict .}}{{end}}{{end}}{{if $n}}{{$n.Set "req" $Q}}{{if eq $P 0}}{{dbSet 20 "queue" ($J.Append $n)}}üìÉ **Queued `{{print $n.artist " - " $n.title}}`!**{{else if eq $P 1}}{{dbSet 20 "queue" ((cslice (index $J 0) $n).AppendSlice $C)}}üìÉ **Next up `{{print $n.artist " - " $n.title}}`!**{{else}}{{template "c" .CCID}}{{template "e"}}{{sendMessage nil "‚è≠ **Skipped!**"}}{{sleep 1}}{{template "b" $n}}{{template "a" (cslice $M 0 $n $C)}}{{template "s" (cslice .CCID $n.length)}}{{dbSet 20 "queue" ((cslice $n).AppendSlice $C)}}{{end}}{{else}}‚ùå **Couldn't find `{{$x}}`!**{{end}}{{else}}‚ùå **Please specify a song!**{{end}}{{end}}{{if .ExecData}}{{$z:=sdict "title" "‚èπ Music stopped" "color" 16734296}}{{$Q:=""}}{{if le (len $b) 1}}{{$Q ="üåê Disconnected"}}{{else if $C}}{{with index $C 0}}{{$A:=execAdmin "sb" (print .artist " - " .title " [" .length "]")}}{{template "a" (cslice $M 0 . $w)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{else}}{{$Q ="üèÅ The queue has ended"}}{{end}}{{dbSet 20 "queue" $C}}{{if $Q}}{{$z.Set "description" (print "Reason:\n" $Q)}}{{sendMessage nil (cembed $z)}}{{end}}{{else}}{{$g:=cembed "title" "‚ùå Syntax:" "description" (print "Basic usage is: *" $M "music <action> [arguments]*\nMore advanced usage can be found [here](https://github.com/Engineer152/yagpdb-sb-music#the-command-actions-are-as-follows).\n\nYou can also do: " $M "music help <action>") "color" 16734296}}{{if gt (len .Args) 1}}{{$x:=""}}{{range $K,$L:=.CmdArgs}}{{if $K}}{{$x =print $x " " $L}}{{end}}{{end}}{{if $x}}{{$x =slice $x 1}}{{end}}{{$D:=execAdmin "sb"}}{{$m:=cslice}}{{range reFindAllSubmatches `\x60.+?\x60` (slice $D 29 (sub (len $D) 36))}}{{with reFindAllSubmatches `\A\x60(.+?)\s-\s(.+?)\s\[(.+?)\]\x60\z` (index . 0)}}{{$m =$m.Append (sdict "artist" (index . 0 1) "length" (index . 0 3) "title" (index . 0 2))}}{{end}}{{end}}{{$R:=lower (index .Args 1)}}{{if eq $R "help" "h"}}{{with $H}}{{$O:="all"}}{{if $x}}{{$O =$x}}{{end}}{{execCC . nil 0 $O}}{{else}}‚ùå **Options CCID is not set!**{{end}}{{else if eq $R "list" "l"}}{{execCC $H nil 0 (sdict "t" "a" "c" (cslice 0 $m (or $x 1)))}}{{else if eq $R "search" "find"}}{{if $x}}{{execCC $H nil 0 (sdict "t" "f" "c" $x)}}{{else}}‚ùå **Please specify a search query!**{{end}}{{else if eq $R "grab" "save" "yoink"}}{{with index $J 0}}{{sendDM (cembed "title" "üé∂ Current song" "description" (print .artist " - " .title "\n\nLength: `" .length "`"))}}{{end}}üì¨ <{{.User.ID}}>**, you've got mail!**{{else if eq $R "play" "p"}}{{template "p" (cslice $M 0 .User.ID $J $C $m $x)}}{{else if eq $R "playall" "pa"}}{{if $I}}{{range $m}}{{.Set "req" $.User.ID}}{{end}}{{dbSet 20 "queue" ($J.AppendSlice $m)}}üìÉ **Queued all songs I could find!**{{else}}{{$B}}{{end}}{{else if eq $R "random" "r"}}{{with index $m (randInt (sub (len $m) 1))}}{{.Set "req" $.User.ID}}‚ú® **Random song is...** `{{print .artist " - " .title}}`{{dbSet 20 "queue" ($J.Append .)}}{{end}}{{else if eq $R "queue" "q"}}{{$O:=$J}}{{if $k}}{{$J =$C}}{{end}}{{execCC $H nil 0 (sdict "t" "a" "c" (cslice 1 $O (or $x 1)))}}{{else if eq $R "remove" "rm"}}{{if $I}}{{if $x}}{{$O:=$J}}{{$S:=cslice (index $J 0)}}{{if $k}}{{$O =$C}}{{end}}{{$w:=cslice}}{{$E:=cslice}}{{$P:=0}}{{range split $x " "}}{{with toInt .}}{{$E =$E.Append .}}{{end}}{{end}}{{range $K,$L:=$O}}{{if in $E (add $K 1)}}{{$P =add $P 1}}{{else}}{{$w =$w.Append $L}}{{end}}{{end}}üóë **Removed {{$P}} songs!**{{if $k}}{{dbSet 20 "queue" ($S.AppendSlice $w)}}{{else}}{{dbSet 20 "queue" $w}}{{end}}{{else}}‚ùå **Please input a number!**{{end}}{{else}}{{$B}}{{end}}{{else if eq $R "clear" "cl"}}{{if $I}}{{$F:="‚ùå **Nothing cleared!**"}}{{$S:=cslice (index $J 0)}}{{if $x}}{{$T:=0}}{{with .Message.Mentions}}{{$T =(index . 0).ID}}{{end}}{{with or $T (toInt $x)}}{{$T =.}}{{$O:=$J}}{{if $k}}{{$O =$C}}{{end}}{{$w:=cslice}}{{range $O}}{{if ne .req $T}}{{$w =$w.Append .}}{{end}}{{end}}{{if lt (len $w) (len $O)}}{{if not $k}}{{$S =cslice}}{{end}}{{dbSet 20 "queue" ($S.AppendSlice $w)}}üóë **Queue cleared for <@{{$T}}>!**{{else}}{{$F}}{{end}}{{end}}{{else}}{{$G:="üóë **Queue cleared!**"}}{{if $k}}{{if $C}}{{dbSet 20 "queue" $S}}{{$G}}{{else}}{{$F}}{{end}}{{else}}{{dbDel 20 "queue"}}{{$G}}{{end}}{{end}}{{else}}{{$B}}{{end}}{{else}}{{if not (reFind `^(n(?:owplaying|p)|(?:f(?:orce)?ski|p(?:layski|(?:lay)?to|ski))p|p(?:laynow|n)|s(?:huffle|t(?:art|op))|r(?:andom|eplay|emove)|begin|end|pt|ps|fs|e|rm?|b)$` $R)}}{{sendMessage nil $g}}{{else if not $d}}‚ùå **You're not in a voice channel!**{{else if eq $R "start" "begin" "b"}}{{if $k}}‚ùå <@{{$j}}> **is already playing something!**{{else if $J}}{{template "c" .CCID}}{{with index $J 0}}{{template "b" .}}{{sendMessage nil "üé∂ **Music started!**"}}{{template "a" (cslice $M 0 . $C)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{else}}ü§∑‚Äç‚ôÇÔ∏è **No songs in the queue**{{end}}{{else if not $k}}‚ùå **Nothing is playing right now!**{{else if ne $k $d}}‚ùå **You need to be in the same voice channel as <@{{$j}}>!**{{else if eq $R "forceskip" "fs" "fskip"}}{{if $I}}{{$O:=1}}{{if $x}}{{$O =toInt $x}}{{end}}{{if eq $O 0}}‚ùå **Please enter a valid number!**{{else}}{{sendMessage nil "‚è≠ **Skipped!**"}}{{template "c" .CCID}}{{template "e"}}{{$w:=cslice}}{{range $K,$L:=$J}}{{if ge $K $O}}{{$w =$w.Append $L}}{{end}}{{end}}{{if $w}}{{$v:=cslice}}{{range $K,$L:=$w}}{{if $K}}{{$v =$v.Append $L}}{{end}}{{end}}{{with index $w 0}}{{sleep 1}}{{template "b" .}}{{template "a" (cslice $M 0 . $v)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{dbSet 20 "queue" $w}}{{else}}{{execCC .CCID nil 0 1}}{{end}}{{end}}{{else}}{{$B}}{{end}}{{else if eq $R "replay"}}{{template "c" .CCID}}{{template "e"}}{{with index $J 0}}{{.Set "req" $.User.ID}}{{dbSet 20 "queue" $J}}{{sleep 1}}{{template "b" .}}‚Ü™ **Replaying `{{print .artist " - " .title}}`!**{{template "s" (cslice $.CCID .length)}}{{end}}{{else if eq $R "playtop" "pt" "ptop"}}{{template "p" (cslice $M 1 .User.ID $J $C $m $x)}}{{else if eq $R "playskip" "ps" "pskip" "playnow" "pn"}}{{template "p" (cslice $M 2 .User.ID $J $C $m $x)}}{{else if eq $R "stop" "end" "e"}}{{template "c" .CCID}}{{template "e"}}‚èπ **Music stopped!**{{dbSet 20 "queue" $C}}{{else if eq $R "nowplaying" "np"}}{{template "a" (cslice $M 0 (index $J 0) $C)}}{{else if eq $R "shuffle"}}{{if $I}}{{if $C}}{{dbSet 20 "queue" (shuffle $C)}}üîÄ **Shuffled the queue!**{{else}}‚ùå **Nothing to shuffle!**{{end}}{{else}}{{$B}}{{end}}{{end}}{{end}}{{else}}{{sendMessage nil $g}}{{end}}{{end}}