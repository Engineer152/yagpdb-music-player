{{$j:=8}}{{$m:=204255221017214977}}{{$N:=false}}{{range .Member.Roles}}{{if in (cslice 818943711508693004 757760951620468817 723187777465876543) .}}{{$N =true}}{{end}}{{end}}{{$H:="‚ùå **You need to be a DJ to do this!**"}}{{$O:=cslice}}{{with (dbGet 20 "queue").Value}}{{$O =$O.AppendSlice .}}{{end}}{{$I:=cslice}}{{$B:=cslice}}{{range $P, $Q:=$O}}{{if $P}}{{$I =$I.Append $Q}}{{end}}{{if gt $P 1}}{{$B =$B.Append $Q}}{{end}}{{end}}{{$Q:=execAdmin "prefix"}}{{$R:=reReplace `[\.\[\]\-\?\!\\\*\{\}\(\)\|\+\$\^]` (slice $Q (add 15 (len (str .Guild.ID))) (sub (len $Q) 1)) `\$0`}}{{$o:=0}}{{$k:=0}}{{$g:=cslice}}{{range .Guild.VoiceStates}}{{if eq .UserID $m}}{{$o =.ChannelID}}{{range $.Guild.VoiceStates}}{{if eq .ChannelID $o}}{{$g =$g.Append .}}{{end}}{{end}}{{else if eq .UserID $.User.ID}}{{$k =.ChannelID}}{{end}}{{end}}{{define "a"}}{{$R:=index . 0}}{{$S:=index . 1}}{{$T:=index . 2}}{{if eq $S 0}}{{$U:="Nothing"}}{{if index . 3}}{{$U =(index . 3 0).title}}{{end}}{{dbDel 20 "skip"}}{{sendMessage nil (cembed "title" "üé∂ Now playing" "description" (printf "%s - %s\n\nLength: `%s`\n\nRequested By: <@%d>\n\nUp next: `%s`" $T.artist $T.title $T.length $T.req $U ) "color" (randInt 16777217))}}{{else}}{{$V:=""}}{{$v:=toInt (roundCeil (div (toFloat (len $T)) 10))}}{{$z:=toInt (index . 3)}}{{if not (or $T $v)}}‚ùå **Queue is empty!**{{else if and (gt $z 0) (le $z $v)}}{{$W:=sub (mult $z 10) 10}}{{$X:=$W}}{{range $P, $Q:=$T}}{{if and (ge $P $X) (lt $P (add $X 10))}}{{$W =add $W 1}}{{$C:=""}}{{with $Q.req}}{{$C =print "<@" $Q.req ">"}}{{end}}{{$V =printf "%s\n\n`%d.` [%s - %s](https://music.youtube.com/search?q=%s+%s) **[%s]** %s" $V $W $Q.artist $Q.title (urlquery (lower $Q.title)) (urlquery (lower $Q.artist)) $Q.length $C}}{{end}}{{end}}{{$w:="üìÉ Queue"}}{{if ne $S 1}}{{$w ="üéµ Available songs"}}{{end}}{{sendMessage nil (cembed "title" $w "description" $V "color" 3324667 "thumbnail" (sdict "url" "https://raw.githubusercontent.com/iamcal/emoji-data/master/img-google-136/1f3b5.png") "footer" (sdict "text" (print "Page " $z "/" $v)))}}{{else}}‚ùå **That page doesn't exist!**{{end}}{{end}}{{end}}{{define "b"}}{{$U:=exec "sb" (print .artist " - " .title " [" .length "]")}}{{end}}{{define "e"}}{{$U:=execAdmin "sbclose"}}{{dbDel 20 "skip"}}{{end}}{{define "c"}}{{cancelScheduledUniqueCC . "music"}}{{end}}{{define "s"}}{{scheduleUniqueCC (index . 0) nil (div (toDuration (index . 1)) 1000000000) "music" 1}}{{end}}{{define "p"}}{{$R:=index . 0}}{{$S:=index . 1}}{{$Y:=index . 2}}{{$O:=index . 3}}{{$I:=index . 4}}{{$D:=index . 6}}{{if $D}}{{$A:=sdict}}{{$E:=0}}{{range index . 5}}{{$x:=len (reFind (print `(?i)` ((split (reReplace `[[\]\\.?^${}()|*+]` $D `\$0`) "`"|joinStr `\x60`))) .title)}}{{if and $x (or (eq $E 0) (lt $x $E))}}{{$E =$x}}{{$A =sdict .}}{{end}}{{end}}{{if $A}}{{$A.Set "req" $Y}}{{if eq $S 0}}{{dbSet 20 "queue" ($O.Append $A)}}üìÉ **Queued `{{print $A.artist " - " $A.title}}`!**{{else if eq $S 1}}{{dbSet 20 "queue" ((cslice (index $O 0) $A).AppendSlice $I)}}üìÉ **Next up `{{print $A.artist " - " $A.title}}`!**{{else}}{{template "c" .CCID}}{{template "e"}}{{sendMessage nil "‚è≠ **Skipped!**"}}{{sleep 1}}{{template "b" $A}}{{template "a" (cslice $R 0 $A $I)}}{{template "s" (cslice .CCID $A.length)}}{{dbSet 20 "queue" ((cslice $A).AppendSlice $I)}}{{end}}{{else}}‚ùå **Couldn't find `{{$D}}`!**{{end}}{{else}}‚ùå **Please specify a song!**{{end}}{{end}}{{if .ExecData}}{{$F:=sdict "title" "‚èπ Music stopped" "color" 16734296}}{{$Y:=""}}{{if le (len $g) 1}}{{$Y ="üåê Disconnected"}}{{else if $I}}{{with index $I 0}}{{$G:=execAdmin "sb" (print .artist " - " .title " [" .length "]")}}{{template "a" (cslice $R 0 . $B)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{else}}{{$Y ="üèÅ The queue has ended"}}{{end}}{{dbSet 20 "queue" $I}}{{if $Y}}{{$F.Set "description" (print "Reason:\n" $Y)}}{{sendMessage nil (cembed $F)}}{{end}}{{else}}{{$l:=cembed "title" "‚ùå Syntax:" "description" (print "Basic usage is: *" $R "music <action> [arguments]*\nMore advanced usage can be found [here](https://github.com/Engineer152/yagpdb-sb-music#the-command-actions-are-as-follows).\n\nYou can also do: " $R "music help <action>") "color" 16734296}}{{if gt (len .Args) 1}}{{$D:=""}}{{range $P, $Q:=.CmdArgs}}{{if $P}}{{$D =print $D " " $Q}}{{end}}{{end}}{{if $D}}{{$D =slice $D 1}}{{end}}{{$J:=execAdmin "sb"}}{{$y:=cslice}}{{range reFindAllSubmatches `\x60.+?\x60` (slice $J 29 (sub (len $J) 36))}}{{with reFindAllSubmatches `\A\x60(.+?)\s-\s(.+?)\s\[(.+?)\]\x60\z` (index . 0)}}{{$y =$y.Append (sdict "artist" (index . 0 1) "length" (index . 0 3) "title" (index . 0 2))}}{{end}}{{end}}{{$Z:=lower (index .Args 1)}}{{if eq $Z "help" "h"}}{{with $j}}{{$U:="all"}}{{if $D}}{{$U =$D}}{{end}}{{execCC . nil 0 $U}}{{else}}‚ùå **Options CCID is not set!**{{end}}{{else if eq $Z "list" "l"}}{{template "a" (cslice $R 2 $y (or $D 1))}}{{else if eq $Z "search" "find"}}{{if $D}}{{$x:=cslice}}{{range $P, $Q:=$y}}{{if reFind (print `(?i)` ((split (reReplace `[[\]\\.?^${}()|*+]` $D `\$0`) "`"|joinStr `\x60`))) $Q.title}}{{$x =$x.Append (sdict "artist" $Q.artist "length" $Q.length "title" $Q.title "number" $P)}}{{end}}{{end}}{{with $x}}{{$F:=sdict "title" "üéµ Songs found"}}{{$V:=""}}{{range $P, $Q:=.}}{{if lt $P 10}}{{$V =printf "%s\n\n`%d.` [%s - %s](https://music.youtube.com/search?q=%s+%s) **[%s]**" $V (add $Q.number 1) $Q.artist $Q.title (urlquery (lower $Q.title)) (urlquery (lower $Q.artist)) $Q.length}}{{end}}{{end}}{{if ge (len $x) 10}}{{$V =print $V "\n\n\n**Only showing the first 10 results**"}}{{end}}{{$F.Set "description" $V}}{{sendMessage nil (cembed $F)}}{{else}}‚ùå **No songs found with `{{$D}}`!**{{end}}{{else}}‚ùå **Please specify a search query!**{{end}}{{else if eq $Z "grab" "save" "yoink"}}{{with index $O 0}}{{sendDM (cembed "title" "üé∂ Current song" "description" (print .artist " - " .title "\n\nLength: `" .length "`"))}}{{end}}üì¨ {{.User.Mention}}**, you've got mail!**{{else if eq $Z "play" "p"}}{{template "p" (cslice $R 0 .User.ID $O $I $y $D)}}{{else if eq $Z "playall" "pa"}}{{if $N}}{{range $y}}{{.Set "req" $.User.ID}}{{end}}{{dbSet 20 "queue" ($O.AppendSlice $y)}}üìÉ **Queued all songs I could find!**{{else}}{{$H}}{{end}}{{else if eq $Z "random" "r"}}{{with index $y (randInt (sub (len $y) 1))}}{{.Set "req" $.User.ID}}‚ú® **Random song is...** `{{print .artist " - " .title}}`{{dbSet 20 "queue" ($O.Append .)}}{{end}}{{else if eq $Z "queue" "q"}}{{if $o}}{{template "a" (cslice $R 1 $I (or $D 1))}}{{else}}{{template "a" (cslice $R 1 $O (or $D 1))}}{{end}}{{else if eq $Z "clear" "cl"}}{{if $N}}{{$K:="‚ùå **Nothing cleared!**"}}{{$0:=cslice (index $O 0)}}{{if $D}}{{$1:=0}}{{with .Message.Mentions}}{{$1 =(index . 0).ID}}{{end}}{{with or $1 (toInt $D)}}{{$1 =.}}{{$U:=$O}}{{if $o}}{{$U =$I}}{{end}}{{$B:=cslice}}{{range $U}}{{if ne .req $1}}{{$B =$B.Append .}}{{end}}{{end}}{{if lt (len $B) (len $U)}}{{if not $o}}{{$0 =cslice}}{{end}}{{dbSet 20 "queue" ($0.AppendSlice $B)}}üóë **Queue cleared for <@{{$1}}>!**{{else}}{{$K}}{{end}}{{end}}{{else}}{{$L:="üóë **Queue cleared!**"}}{{if $o}}{{if $I}}{{dbSet 20 "queue" $0}}{{$L}}{{else}}{{$K}}{{end}}{{else}}{{dbDel 20 "queue"}}{{$L}}{{end}}{{end}}{{else}}{{$H}}{{end}}{{else}}{{if not (reFind `^(n(?:owplaying|p)|(?:f(?:orce)?ski|p(?:layski|(?:lay)?to|ski))p|p(?:laynow|n)|s(?:huffle|t(?:art|op))|r(?:andom|eplay)|begin|end|pt|ps|fs|e|r|b)$` $Z)}}{{sendMessage nil $l}}{{else if not $k}}‚ùå **You're not in a voice channel!**{{else if eq $Z "start" "begin" "b"}}{{if $o}}‚ùå <@{{$m}}> **is already playing something!**{{else if $O}}{{template "c" .CCID}}{{with index $O 0}}{{template "b" .}}{{sendMessage nil "üé∂ **Music started!**"}}{{template "a" (cslice $R 0 . $B)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{else}}ü§∑‚Äç‚ôÇÔ∏è **No songs in the queue**{{end}}{{else if not $o}}‚ùå **Nothing is playing right now!**{{else if ne $o $k}}‚ùå **You need to be in the same voice channel as <@{{$m}}>!**{{else if eq $Z "forceskip" "fs" "fskip"}}{{sendMessage nil "‚è≠ **Skipped!**"}}{{template "c" .CCID}}{{template "e"}}{{if $I}}{{with index $I 0}}{{sleep 1}}{{template "b" .}}{{template "a" (cslice $R 0 . $B)}}{{template "s" (cslice $.CCID .length)}}{{end}}{{dbSet 20 "queue" $I}}{{else}}{{execCC .CCID nil 0 1}}{{end}}{{else if eq $Z "replay"}}{{template "c" .CCID}}{{template "e"}}{{with index $O 0}}{{.Set "req" $.User.ID}}{{dbSet 20 "queue" $O}}{{sleep 1}}{{template "b" .}}‚Ü™ **Replaying `{{print .artist " - " .title}}`!**{{template "s" (cslice $.CCID .length)}}{{end}}{{else if eq $Z "playtop" "pt" "ptop"}}{{template "p" (cslice $R 1 .User.ID $O $I $y $D)}}{{else if eq $Z "playskip" "ps" "pskip" "playnow" "pn"}}{{template "p" (cslice $R 2 .User.ID $O $I $y $D)}}{{else if eq $Z "stop" "end" "e"}}{{template "c" .CCID}}{{template "e"}}‚èπ **Music stopped!**{{dbSet 20 "queue" $I}}{{else if eq $Z "nowplaying" "np"}}{{template "a" (cslice $R 0 (index $O 0) $I)}}{{else if eq $Z "remove" "rm"}}{{$M:="‚ùå **Please input a number!**"}}{{if $D}}{{range split $D " "}}{{end}}{{else}}{{$M}}{{end}}{{else if eq $Z "shuffle"}}{{if $N}}{{if $I}}{{dbSet 20 "queue" (shuffle $I)}}üîÄ **Shuffled the queue!**{{else}}‚ùå **Nothing to shuffle!**{{end}}{{else}}{{$H}}{{end}}{{end}}{{end}}{{else}}{{sendMessage nil $l}}{{end}}{{end}}