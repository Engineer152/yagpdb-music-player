{{$g:=8}}{{$m:=204255221017214977}}{{$J:=cslice}}{{with (dbGet 20 "queue").Value}}{{$J =$J.AppendSlice .}}{{end}}{{$H:=cslice}}{{$B:=cslice}}{{range $K, $L:=$J}}{{if ne $K 0}}{{$H =$H.Append $L}}{{end}}{{if gt $K 1}}{{$B =$B.Append $L}}{{end}}{{end}}{{$L:=execAdmin "prefix"}}{{$M:=reReplace `[\.\[\]\-\?\!\\\*\{\}\(\)\|\+\$\^]` (slice $L (add 15 (len (str .Guild.ID))) (sub (len $L) 1)) `\$0`}}{{$n:=0}}{{$h:=0}}{{range .Guild.VoiceStates}}{{if eq .UserID $m}}{{$n =.ChannelID}}{{else if eq .UserID $.User.ID}}{{$h =.ChannelID}}{{end}}{{end}}{{$d:=-1}}{{if $n}}{{range .Guild.VoiceStates}}{{if eq .ChannelID $n}}{{$d =add $d 1}}{{end}}{{end}}{{end}}{{define "announce"}}{{$M:=index . 0}}{{$N:=index . 1}}{{$O:=index . 2}}{{$o:="üìÉ Queue"}}{{$b:=""}}{{$j:=sdict}}{{if eq $N 0}}{{$P:="Nothing"}}{{if index . 3}}{{$P =(index . 3 0).title}}{{end}}{{sendMessage nil (cembed "title" "üé∂ Now playing" "description" (print $O.artist " - " $O.title "\n\nLength: `" $O.length "`\n\nUp next: `" $P "`") "color" (randInt 16777217))}}{{else}}{{$r:=toInt (roundCeil (div (toFloat (len $O)) 10))}}{{$x:=toInt (index . 3)}}{{if and (gt $x 0) (le $x $r)}}{{$j =sdict "text" (print "Page " $x "/" $r)}}{{$C:=sub (mult $x 10) 10}}{{$u:=$C}}{{$y:=add $C 10}}{{range $K, $L:=$O}}{{if and (ge $K $u) (lt $K $y)}}{{$C =add $C 1}}{{$b =printf "%s\n\n`%d.` [%s - %s](https://music.youtube.com/search?q=%s+%s) **[%s]**" $b $C $L.artist $L.title (urlquery (lower $L.title)) (urlquery (lower $L.artist)) $L.length}}{{end}}{{else}}{{$b ="‚ùå **Queue is empty!**"}}{{end}}{{if ne $N 1}}{{$o ="üéµ Available songs"}}{{$b =print $b "\n\n\n**Type **_" $M "music list [page]_** to see other pages (if there are any)**"}}{{end}}{{sendMessage nil (cembed "title" $o "description" $b "color" 0x32BAFB "thumbnail" (sdict "url" "https://raw.githubusercontent.com/iamcal/emoji-data/master/img-google-136/1f3b5.png") "footer" $j)}}{{else}}‚ùå **That page doesn't exist!**{{end}}{{end}}{{end}}{{define "play"}}{{$M:=index . 0}}{{$N:=index . 1}}{{$J:=index . 2}}{{$H:=index . 3}}{{$D:=index . 5}}{{if $D}}{{$z:=sdict}}{{$E:=0}}{{range index . 4}}{{$v:=len (reFind (print `(?i)` ((split (reReplace `[[\]\\.?^${}()|*+]` $D `\$0`) "`"|joinStr `\x60`))) .title)}}{{if and $v (or (eq $E 0) (lt $v $E))}}{{$E =$v}}{{$z =sdict .}}{{end}}{{end}}{{if $z}}{{if eq $N 0}}{{dbSet 20 "queue" ($J.Append $z)}}üìÉ **Queued `{{print $z.artist " - " $z.title}}`!**{{else if eq $N 1}}{{dbSet 20 "queue" ((cslice (index $J 0) $z).AppendSlice $H)}}üìÉ **Next up `{{print $z.artist " - " $z.title}}`!**{{else}}{{cancelScheduledUniqueCC .CCID "music"}}{{$F:=execAdmin "sbclose"}}{{sleep 1}}{{$F:=exec "sb" (print $z.artist " - " $z.title " [" $z.length "]")}}{{sendMessage nil "‚è≠ **Skipped!**"}}{{template "announce" (cslice $M 0 $z $H)}}{{scheduleUniqueCC .CCID nil (div (toDuration $z.length) 1000000000) "music" 1}}{{dbSet 20 "queue" ((cslice $z).AppendSlice $H)}}{{end}}{{else}}‚ùå **Couldn't find `{{$D}}`!**{{end}}{{else}}‚ùå **Please specify a song!**{{end}}{{end}}{{if .ExecData}}{{$G:=sdict "title" "‚èπ Music stopped" "color" 16734296}}{{$k:=""}}{{if not $n}}{{$k ="‚ùå The bot is no longer in a voice channel"}}{{else if not $d}}{{$k ="ü•≤ Everyone has abandoned me..."}}{{else}}{{if $H}}{{$z:=index $H 0}}{{$F:=execAdmin "sb" (print $z.artist " - " $z.title " [" $z.length "]")}}{{template "announce" (cslice $M 0 $z $B)}}{{scheduleUniqueCC .CCID nil (div (toDuration $z.length) 1000000000) "music" 1}}{{else}}{{$k ="üèÅ The queue has ended"}}{{end}}{{end}}{{dbSet 20 "queue" $H}}{{if $k}}{{$G.Set "description" (print "Reason:\n" $k)}}{{sendMessage nil (cembed $G)}}{{end}}{{else}}{{$l:=cembed "title" "‚ùå Syntax:" "description" (print "Basic usage is: *" $M "music <action> [arguments]*\nMore advanced usage can be found [here](https://github.com/Engineer152/yagpdb-sb-music#the-command-actions-are-as-follows).\n\nYou can also do: " $M "music help <action>") "color" 16734296}}{{if gt (len .Args) 1}}{{$D:=""}}{{range $K, $L:=.CmdArgs}}{{if $K}}{{$D =print $D " " $L}}{{end}}{{end}}{{if $D}}{{$D =slice $D 1}}{{end}}{{$I:=execAdmin "sb"}}{{$w:=cslice}}{{range reFindAllSubmatches `\x60.+?\x60` (slice $I 29 (sub (len $I) 36))}}{{with reFindAllSubmatches `\A\x60(.+?)\s-\s(.+?)\s\[(.+?)\]\x60\z` (index . 0)}}{{$w =$w.Append (sdict "artist" (index . 0 1) "length" (index . 0 3) "title" (index . 0 2))}}{{end}}{{end}}{{$Q:=lower (index .Args 1)}}{{if eq $Q "help" "h"}}{{with $g}}{{$P:="all"}}{{if $D}}{{$P =$D}}{{end}}{{execCC . nil 0 $P}}{{else}}‚ùå **Help CCID is not set!**{{end}}{{else if eq $Q "list" "l"}}{{template "announce" (cslice $M 2 $w (or $D 1))}}{{else if eq $Q "search" "find"}}{{if $D}}{{$v:=cslice}}{{range $K, $L:=$w}}{{if reFind (print `(?i)` ((split (reReplace `[[\]\\.?^${}()|*+]` $D `\$0`) "`"|joinStr `\x60`))) $L.title}}{{$v =$v.Append (sdict "artist" $L.artist "length" $L.length "title" $L.title "number" $K)}}{{end}}{{end}}{{with $v}}{{$G:=sdict "title" "üéµ Songs found"}}{{$f:=""}}{{range $K, $L:=.}}{{if lt $K 10}}{{$f =printf "%s\n\n`%d.` [%s - %s](https://music.youtube.com/search?q=%s+%s) **[%s]**" $f (add $L.number 1) $L.artist $L.title (urlquery (lower $L.title)) (urlquery (lower $L.artist)) $L.length}}{{end}}{{end}}{{if ge (len $v) 10}}{{$f =print $f "\n\n\n**Only showing the first 10 results**"}}{{end}}{{$G.Set "description" $f}}{{sendMessage nil (cembed $G)}}{{else}}‚ùå **No songs found with `{{$D}}`!**{{end}}{{else}}‚ùå **Please specify a search query!**{{end}}{{else if eq $Q "play" "p"}}{{template "play" (cslice $M 0 $J $H $w $D)}}{{else if eq $Q "playall" "pa"}}{{dbSet 20 "queue" ($J.AppendSlice $w)}}üìÉ **Queued all songs I could find!**{{else if eq $Q "queue" "q"}}{{$P:=$J}}{{if $n}}{{$P =$H}}{{end}}{{template "announce" (cslice $M 1 $P (or $D 1))}}{{else}}{{if not (reFind `^(n(?:owplaying|p)|p(?:(?:lay)?ski|(?:lay)?to)p|p(?:laynow|n)|s(?:(?:huffl|av)e|t(?:art|op)|kip)?|r(?:andom|eplay)|clear|yoink|again|begin|grab|next|end|cl|p[st]|e|r|b)$` $Q)}}{{sendMessage nil $l}}{{else if not $h}}‚ùå **You're not in a voice channel!**{{else if eq $Q "start" "begin" "b"}}{{if $n}}‚ùå <@{{$m}}> **is already playing something!**{{else if $J}}{{cancelScheduledUniqueCC .CCID "music"}}{{with index $J 0}}{{$A:=print .artist " - " .title}}{{$F:=exec "sb" (print $A " [" .length "]")}}{{sendMessage nil "üé∂ **Music started!**"}}{{template "announce" (cslice $M 0 . $B)}}{{scheduleUniqueCC $.CCID nil (div (toDuration .length) 1000000000) "music" 1}}{{end}}{{else}}ü§∑‚Äç‚ôÇÔ∏è **No songs in the queue**{{end}}{{else if not $n}}‚ùå **Nothing is playing right now!**{{else if ne $n $h}}‚ùå **You need to be in the same voice channel as <@{{$m}}>!**{{else if eq $Q "skip" "next" "s"}}{{sendMessage nil "‚è≠ **Skipped!**"}}{{cancelScheduledUniqueCC .CCID "music"}}{{$F:=execAdmin "sbclose"}}{{if $H}}{{with index $H 0}}{{sleep 1}}{{$F:=exec "sb" (print .artist " - " .title " [" .length "]")}}{{template "announce" (cslice $M 0 . $B)}}{{scheduleUniqueCC $.CCID nil (div (toDuration .length) 1000000000) "music" 1}}{{end}}{{dbSet 20 "queue" $H}}{{else}}{{sendMessage nil (cembed "title" "‚èπ Music stopped" "description" "Reason:\nüèÅ The queue has ended" "color" 16734296)}}{{end}}{{else if eq $Q "replay" "again"}}{{cancelScheduledUniqueCC .CCID "music"}}{{$F:=execAdmin "sbclose"}}{{with index $J 0}}{{$A:=print .artist " - " .title}}{{sleep 1}}{{$F:=exec "sb" (print $A " [" .length "]")}}‚Ü™ **Replaying `{{$A}}`!**{{scheduleUniqueCC $.CCID nil (div (toDuration .length) 1000000000) "music" 1}}{{end}}{{else if eq $Q "random" "r"}}{{with index $w (randInt (sub (len $w) 1))}}‚ú® **Random song is...** `{{print .artist " - " .title}}`{{dbSet 20 "queue" ($J.Append .)}}{{end}}{{else if eq $Q "playtop" "pt" "ptop"}}{{template "play" (cslice $M 1 $J $H $w $D)}}{{else if eq $Q "playskip" "ps" "pskip" "playnow" "pn"}}{{template "play" (cslice $M 2 $J $H $w $D)}}{{else if eq $Q "stop" "end" "e"}}{{cancelScheduledUniqueCC .CCID "music"}}{{$F:=execAdmin "sbclose"}}‚èπ **Music stopped!**{{dbSet 20 "queue" $H}}{{else if eq $Q "nowplaying" "np"}}{{template "announce" (cslice $M 0 (index $J 0) $H)}}{{else if eq $Q "grab" "save" "yoink"}}{{with index $J 0}}{{sendDM (cembed "title" "üé∂ Current song" "description" (print .artist " - " .title "\n\nLength: `" .length "`"))}}{{end}}üì¨ {{.User.Mention}}**, you've got mail!**{{deleteResponse 5}}{{else if eq $Q "shuffle"}}{{if $H}}{{dbSet 20 "queue" (shuffle $H)}}üîÄ **Shuffled the queue!**{{else}}‚ùå **Nothing to shuffle!**{{end}}{{else if eq $Q "clear" "cl"}}{{if $H}}{{dbSet 20 "queue" (cslice (index $J 0))}}üóë **Queue cleared!**{{else}}‚ùå **Nothing to clear!**{{end}}{{end}}{{end}}{{else}}{{sendMessage nil $l}}{{end}}{{end}}